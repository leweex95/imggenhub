name: Unit tests

on:
  push:
  pull_request_target:  # for safety: only run on base repo, not forked ones
  workflow_dispatch:
  
permissions:
  contents: read
  actions: none
  checks: write
  id-token: none

jobs:
  test:
    runs-on: imggenhub-runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Poetry (Windows)
        if: runner.os == 'Windows'
        working-directory: ${{ github.workspace }}
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing -OutFile install-poetry.py
          py install-poetry.py --version 1.8.2
          # Add Poetry to PATH for all subsequent steps
          "$env:USERPROFILE\AppData\Roaming\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          $env:PATH = "$env:USERPROFILE\AppData\Roaming\Python\Scripts;$env:PATH"
          poetry --version

      - name: Install Poetry (Linux/macOS)
        if: runner.os != 'Windows'
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2
          poetry --version

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          Set-Location "$env:GITHUB_WORKSPACE"
          poetry install --no-interaction

      - name: Install dependencies (Linux/macOS)
        if: runner.os != 'Windows'
        working-directory: ${{ github.workspace }}
        shell: bash
        run: |
          poetry install --no-interaction

      - name: Run unit tests (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          Set-Location "$env:GITHUB_WORKSPACE"
          poetry run python -m unittest discover -s tests

      - name: Run unit tests (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          poetry run python -m unittest discover -s tests

      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        continue-on-error: true
